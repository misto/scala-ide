<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<plugin>
 <extension-point id="scalaCodeAnalysis" name="Scala Code Analysis" schema="schema/scalaCodeAnalysis.exsd"/>
 <extension
       point="org.scala-ide.sdt.codeanalysis.scalaCodeAnalysis">
    <analyzer
          class="scala.tools.eclipse.codeanalysis.analyzers.UnusedImports"
          id="org.scala-ide.sdt.codeanalysis.unusedimports"
          name="Unused Imports"
          msgPattern="Unused Import %s">
    </analyzer>
    <analyzer
          class="scala.tools.eclipse.codeanalysis.analyzers.ClassFileNameMismatch"
          id="org.scala-ide.sdt.codeanalysis.classfilenamemismatch"
          name="Class/File-Name Mismatch"
          msgPattern="Class- and filename mismatch">
    </analyzer>
    <analyzer
          class="scala.tools.eclipse.codeanalysis.analyzers.PrintlnStatement"
          id="org.scala-ide.sdt.codeanalysis.println"
          name="Println Statement"
          msgPattern="println called">
    </analyzer>
    <analyzer
          class="scala.tools.eclipse.codeanalysis.analyzers.UnnecessaryPatternMatches"
          id="org.scala-ide.sdt.codeanalysis.UnnecessaryPatternMatches"
          name="Unnecessary Pattern Match"
          msgPattern="Replace pattern match by call to `%s`">
       <marker
             id="org.scala-ide.sdt.codeanalysis.unnecessaryPatternMatch"
             severity="0">
       </marker>
    </analyzer>
 </extension>
   <extension
       id="scalaCodeAnalysisProblem"
       name="Scala Code Analysis"
       point="org.eclipse.core.resources.markers">
    <super
          type="org.scala-ide.sdt.core.problem">
    </super>
    <persistent
          value="true">
    </persistent>
  </extension>
 <extension
       id="unnecessaryPatternMatch"
       name="Scala Code Analysis"
       point="org.eclipse.core.resources.markers">
    <super
          type="org.scala-ide.sdt.codeanalysis.scalaCodeAnalysisProblem">
    </super>
    <persistent
          value="true">
    </persistent>
 </extension>
 <extension
       point="org.eclipse.ui.ide.markerResolution">
    <markerResolutionGenerator
          class="scala.tools.eclipse.codeanalysis.quickfixes.UnnecessaryPatternMatchMarkerResolutionGenerator"
          markerType="org.scala-ide.sdt.codeanalysis.unnecessaryPatternMatch">
    </markerResolutionGenerator>
 </extension>
 <extension
       point="org.scala-ide.sdt.core.compilerSettingsExtension">
    <compilerSettings
          class="scala.tools.eclipse.codeanalysis.CompilerPluginSettings">
    </compilerSettings>
 </extension>
 <extension
       point="org.scala-ide.sdt.core.buildReporting">
    <buildReporter
          class="scala.tools.eclipse.codeanalysis.CodeAnalysisProblemsReporter">
    </buildReporter>
 </extension>
  <extension
        id="org.scala-ide.sdt.core.preferences"
        point="org.eclipse.core.runtime.preferences">
     <initializer
           class="scala.tools.eclipse.codeanalysis.CodeAnalysisPreferenceInitializer">
     </initializer>
  </extension>
  <extension
         point="org.eclipse.ui.propertyPages">
      <page
            class="scala.tools.eclipse.codeanalysis.CodeAnalysisPreferencePage"
            id="scala.tools.eclipse.codeanalysis.CodeAnalysisPropertyPage"
            name="Scala Code Analysis">
         <filter
               name="nature"
               value="org.scala-ide.sdt.core.scalanature"/>
         <enabledWhen>
         <or> <instanceof value="org.eclipse.jdt.core.IJavaProject"/>
              <instanceof value="org.eclipse.core.resources.IProject"/>
         </or>
         </enabledWhen>
      </page>
   </extension>
   <extension point="org.eclipse.ui.preferencePages">
      <page
            category="org.scala-ide.sdt.core.preferences"
            class="scala.tools.eclipse.codeanalysis.CodeAnalysisPreferencePage"
            id="scala.tools.eclipse.codeanalysis.CodeAnalysisPreferencePage"
            name="Code Analysis">
      </page>
   </extension>
  <extension
        id="org.scala-ide.sdt.core.preferences"
        point="org.eclipse.core.runtime.preferences">
     <initializer
           class="scala.tools.eclipse.codeanalysis.CodeAnalysisPreferenceInitializer">
     </initializer>
  </extension>
</plugin>
